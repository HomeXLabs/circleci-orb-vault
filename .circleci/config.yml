version: 2.1

orbs:
  orb-tools: circleci/orb-tools@9.0.0
  slack: circleci/slack@3.3.0

jobs:
  create-release:
    description: |
      Creates the release using Semantic Release
    docker:
      - image: circleci/node
    steps:
    - checkout
    - run:
        name: Create release
        command: |
          export SEMANTIC_RELEASE_PACKAGE=${CIRCLE_PROJECT_REPONAME}
          npx -p semantic-release -p semantic-release/git -p semantic-release/changelog -p semantic-release-slack-bot semantic-release
    - slack/status:
        fail_only: true
        failure_message: ":rotating_light: Circle Vault Orb release has failed! $FAILURE_MESSAGE"
        webhook: $SLACK_WEBHOOK
  publish-orb:
    description: |
      Uses the CLI to promote a dev version of an orb to the registry.
    docker:
      - image: circleci/circleci-cli
    parameters:
      add-pr-comment:
        description: |
          CircleCI can comment on the merged PR with the final production version. If you want contributors to see a message with the production version, please provide the username & token, and ensure the merge commit subject includes the PR number in default format. i.e. 'Merge pull request #XX from some-branch'
        type: boolean
      bot-token-variable:
        default: PR_COMMENTER_GITHUB_TOKEN
        description: |
          Name of env var containing the GitHub token value of the GitHub user that to be used for posting the PR comment. Pass this as a raw string such as GITHUB_TOKEN. Do not paste the actual token into your configuration. Only applicable when add-pr-comment is set to true.
        type: env_var_name
      bot-user:
        default: ""
        description: |
          The GitHub user to post PR comment. Only applicable when add-pr-comment is set to true.
        type: string
      orb-ref:
        description: |
          Reference to publish to a production release
        type: string
      token-variable:
        default: CIRCLE_TOKEN
        description: |
          Name of env var containing your token. Pass this as a raw string such as ORB_PUBLISHING_TOKEN. Do not paste the actual token into your configuration. If omitted it's assumed the CLI has already been setup with a valid token.
        type: env_var_name
    steps:
    - checkout
    - orb-tools/publish:
        orb-ref: << parameters.orb-ref >>
        token-variable: << parameters.token-variable >>
    - when:
        condition: <<parameters.add-pr-comment>>
        steps:
        - orb-tools/post-pr-comment:
            bot-token-variable: <<parameters.bot-token-variable>>
            bot-user: <<parameters.bot-user>>
            comment: $PR_MESSAGE

workflows:
  orb-test-and-release:
    jobs:
      - orb-tools/lint:
          filters:
            tags:
              ignore: /.*/
      - orb-tools/pack:
          requires:
          - orb-tools/lint
      - orb-tools/publish-dev:
          orb-name: homexlabs/vault
          branch-sha-version-ref: 'dev:$CIRCLE_BRANCH'
          publish-branch-sha-version: true
          requires:
          - orb-tools/pack
          filters:
            branches:
              ignore: master
      - create-release:
          requires:
          - orb-tools/pack
          filters:
            branches:
              only: master
  orb-publishing-tag:
    jobs:
      - publish-orb:
          orb-ref: homexlabs/vault@$CIRCLE_TAG
          add-pr-comment: true
          bot-token-variable: CIRCLE_TOKEN
          bot-user: devopsheroes
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/
